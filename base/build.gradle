apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //MultiDex分包方法
        multiDexEnabled true
        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }


    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //防止编译的时候oom、GC
    dexOptions {
        javaMaxHeapSize "4g"
    }

    //解决.9图问题
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    greendao {
        schemaVersion 1
        daoPackage 'com.intretech.app.base.db'
        targetGenDir 'src/main/java'
    }
}

dependencies {
    //把implementation 用api代替,它是对外部公开的, 所有其他的module就不需要添加该依赖
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies["appcompat_v7"]
    api rootProject.ext.dependencies["constraint_layout"]
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["support_annotations"]
    testApi rootProject.ext.dependencies["junit"]
    androidTestApi rootProject.ext.dependencies["runner"]
    androidTestApi rootProject.ext.dependencies["espresso_core"]

    // 分包
    api rootProject.ext.dependencies["multidex"]

    // 动态权限申请
    api rootProject.ext.dependencies["yanzhenjie:permission"]


    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["zxing"]
    api rootProject.ext.dependencies["gson"]
    // 万能适配器
    api rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]

    /**
     * rxjava2.0 + retrofit2.0 的网络框架
     */
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxjava_rxandroid"]
    api rootProject.ext.dependencies["retrofit2"]
    api rootProject.ext.dependencies["retrofit2_converter_gson"]
    api rootProject.ext.dependencies["retrofit2_adapter_rxjava2"]
    api rootProject.ext.dependencies["okhttp3_logging_interceptor"]
    api rootProject.ext.dependencies["rxrelay2"]

    /**
     * 数据库加密升级
     */
    api rootProject.ext.dependencies["greendao"]
    api rootProject.ext.dependencies["sqlcipher"]
    api rootProject.ext.dependencies["GreenDaoUpgradeHelper"]

    api rootProject.ext.dependencies["SmartRefreshLayout"]

   /* api rootProject.ext.dependencies["lifecycle"]*/


    //Arouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    api rootProject.ext.dependencies["arouter_api"]
    api rootProject.ext.dependencies["arouter_annotation"]


}
